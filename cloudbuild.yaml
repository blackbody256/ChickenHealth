steps:
  # Build the Docker image, tagging it for Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-east4-docker.pkg.dev/$PROJECT_ID/disease-detection-repo/disease-detection:latest'
      - '.'
      - '--build-arg'
      - 'MODEL_GDRIVE_ID=${_MODEL_GDRIVE_ID}'

  # Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-east4-docker.pkg.dev/$PROJECT_ID/disease-detection-repo/disease-detection:latest']

  # Collect static files and upload to Google Cloud Storage
  - name: 'us-east4-docker.pkg.dev/$PROJECT_ID/disease-detection-repo/disease-detection:latest'
    entrypoint: 'python'
    args: ['Main/disease_detection/manage.py', 'collectstatic', '--noinput']
    env:
      - 'GS_BUCKET_NAME=${_GS_BUCKET_NAME}'
      - 'GS_PROJECT_ID=${PROJECT_ID}'
      - 'DATABASE_URL=${_DATABASE_URL}'
      - 'SECRET_KEY=${_SECRET_KEY}'
      - 'DEBUG=False'

  # Deploy to Cloud Run from the new Artifact Registry image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'disease-detection'
      - '--image'
      - 'us-east4-docker.pkg.dev/$PROJECT_ID/disease-detection-repo/disease-detection:latest'
      - '--accelerator'
      - 'type=nvidia-tesla-t4,count=1'
      - '--region'
      - 'us-east4'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--cpu'
      - '4'
      - '--memory'
      - '8Gi'
      - '--timeout'
      - '900'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - '--set-env-vars=^--^GS_BUCKET_NAME=${_GS_BUCKET_NAME}--GS_PROJECT_ID=${PROJECT_ID}--DATABASE_URL=${_DATABASE_URL}--SECRET_KEY=${_SECRET_KEY}--DEBUG=False--SUPABASE_DB_HOST=${_SUPABASE_DB_HOST}--SUPABASE_DB_NAME=${_SUPABASE_DB_NAME}--SUPABASE_DB_USER=${_SUPABASE_DB_USER}--SUPABASE_DB_PASSWORD=${_SUPABASE_DB_PASSWORD}--SUPABASE_DB_PORT=${_SUPABASE_DB_PORT}--MODEL_GDRIVE_ID=${_MODEL_GDRIVE_ID}--ALLOWED_HOSTS=${_ALLOWED_HOSTS}'

# List the image to be pushed
images:
  - 'us-east4-docker.pkg.dev/$PROJECT_ID/disease-detection-repo/disease-detection:latest'

# Substitution variables with actual values
substitutions:
  _GS_BUCKET_NAME: 'chicken-health-app-storage'
  _DATABASE_URL: 'postgresql://postgres.ievgzwdtimuakjwaefgk:Bnn*8_Q7CbcZ&T6@aws-0-eu-north-1.pooler.supabase.com:6543/postgres'
  _SECRET_KEY: 'django-insecure-3a7hitoqn$vs2h*3!cosb7g^69)ptxlgtj&x1=$u6ckv$#2*nh'
  _SUPABASE_DB_HOST: 'aws-0-eu-north-1.pooler.supabase.com'
  _SUPABASE_DB_NAME: 'postgres'
  _SUPABASE_DB_USER: 'postgres.ievgzwdtimuakjwaefgk'
  _SUPABASE_DB_PASSWORD: 'Bnn*8_Q7CbcZ&T6'
  _SUPABASE_DB_PORT: '6543'
  _ALLOWED_HOSTS: '.run.app,.googleusercontent.com'

# Options for logging
options:
  logging: CLOUD_LOGGING_ONLY